// <auto-generated />
using DevShop.Identity.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace Infrastructure.Migrations.Log
{
    [DbContext(typeof(LogDbContext))]
    partial class LogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.DomainObjects.LogError", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Erro")
                        .HasMaxLength(2147483647)
                        .HasColumnType("text");

                    b.Property<string>("ErroCompleto")
                        .HasMaxLength(2147483647)
                        .HasColumnType("text");

                    b.Property<string>("Method")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Path")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Query")
                        .HasMaxLength(2147483647)
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id")
                        .HasName("Pk_LogErrors_Id");

                    b.ToTable("__LogErrors", (string)null);
                });

            modelBuilder.Entity("Core.DomainObjects.LogRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .HasMaxLength(2147483647)
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Device")
                        .HasMaxLength(600)
                        .HasColumnType("character varying(600)");

                    b.Property<TimeSpan>("ExecutionTime")
                        .HasColumnType("interval");

                    b.Property<string>("Header")
                        .HasMaxLength(2147483647)
                        .HasColumnType("text");

                    b.Property<string>("Host")
                        .HasMaxLength(600)
                        .HasColumnType("character varying(600)");

                    b.Property<string>("Ip")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Method")
                        .HasMaxLength(600)
                        .HasColumnType("character varying(600)");

                    b.Property<string>("Path")
                        .HasMaxLength(600)
                        .HasColumnType("character varying(600)");

                    b.Property<string>("Query")
                        .HasMaxLength(2147483647)
                        .HasColumnType("text");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Url")
                        .HasMaxLength(600)
                        .HasColumnType("character varying(600)");

                    b.HasKey("Id")
                        .HasName("Pk_LogRequests_Id");

                    b.ToTable("__LogRequests", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
